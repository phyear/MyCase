<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kc.mapper.JobMapper">
  <resultMap id="BaseResultMap"   type="com.kc.model.Job" >
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="deptId"  javaType="INTEGER" property="deptId" />
    <association property="dept" column="deptId"  select="com.kc.mapper.DeptMapper.selById" />
  </resultMap>

  <select id="selById"   resultType="com.kc.model.Job" >
    select * from job where id=#{0}
  </select>
  <sql id="Base_Column_List">
    id, name, create_date, type, count,deptId
  </sql>
     
    <select id="selectAndPage"  resultMap="BaseResultMap">
      select 
    <include refid="Base_Column_List" />
       from job
     <where>
       <if test="id != null">
         id=#{id,jdbcType=BIGINT}
      </if>
      <if test="name != null">
       
      </if>
      <if test="createDate != null">
        and create_date=#{createDate,jdbcType=TIMESTAMP}
      </if>
      <if test="type != null">
       and type= #{type,jdbcType=INTEGER}
      </if>
      <if test="count != null">
      and count= #{count,jdbcType=INTEGER}
      </if>
      <if test="deptId != null">
       and deptId=#{deptId,jdbcType=INTEGER}
      </if>
     </where>
    </select>
    
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from job
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from job
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.kc.model.Job">
    insert into job (id, name, create_date, 
      type, count,deptId)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{type,jdbcType=INTEGER}, #{count,jdbcType=INTEGER},#{deptId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective"  parameterType="com.kc.model.Job">
    insert into job
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="deptId != null">
        deptId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.kc.model.Job">
    update job
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="count != null">
        count = #{count,jdbcType=INTEGER},
      </if>
       <if test="deptId != null">
        count = #{deptId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey"  parameterType="com.kc.model.Job">
    update job
    set name = #{name,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=INTEGER},
      count = #{count,jdbcType=INTEGER}
      where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>